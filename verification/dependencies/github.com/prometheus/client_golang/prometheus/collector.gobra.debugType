package prometheus


type Collector (:: NamedType) interface {
  requires Mem (:: MPredicateSpec)() && acc(c (:: InParameter).SendChannel (:: non-regular entity)(), _) && c (:: InParameter).SendGivenPerm (:: non-regular entity)() == *Desc (:: non-regular entity).Mem (:: non-regular entity){_}
  ensures Mem (:: MPredicateSpec)()
  Describe (:: MethodSpec)(c (:: InParameter) chan<- *Desc (:: non-regular entity)) ()
  requires Mem (:: MPredicateSpec)() && acc(c (:: InParameter).SendChannel (:: non-regular entity)(), _) && c (:: InParameter).SendGivenPerm (:: non-regular entity)() == Metric (:: non-regular entity).Mem (:: non-regular entity){_}
  ensures Mem (:: MPredicateSpec)()
  Collect (:: MethodSpec)(c (:: InParameter) chan<- Metric (:: non-regular entity)) ()pred Mem (:: MPredicateSpec)()
}

